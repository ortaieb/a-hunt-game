#!/bin/bash

# Docker Help - Available Commands for Scavenger Hunt Game Server
# This script displays all available Docker commands and their usage

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${GREEN}=========================================================${NC}"
echo -e "${GREEN}    üê≥ Scavenger Hunt Game Server - Docker Commands    ${NC}"
echo -e "${GREEN}=========================================================${NC}"
echo ""

echo -e "${CYAN}üì¶ DIRECTORY STRUCTURE${NC}"
echo -e "${BLUE}Root Directory:${NC}"
echo -e "  docker-build       - Build Docker image (wrapper)"
echo -e "  docker-run         - Run container (wrapper)"
echo -e "  docker-setup       - Complete setup with DB (wrapper)"
echo -e "  docker-help        - Show this help (you're here!)"
echo ""
echo -e "${BLUE}Package Directory (./package/):${NC}"
echo -e "  Dockerfile                - Production multi-stage build"
echo -e "  Dockerfile.dev           - Development build with tools"
echo -e "  docker-compose.full.yml  - Complete stack (DB + App)"
echo -e "  docker-build.sh          - Build script"
echo -e "  docker-run.sh            - Simple run script"
echo -e "  docker-run-with-db.sh    - Run with database setup"
echo -e "  docker-reset-and-run.sh  - Full reset and setup"
echo ""

echo -e "${CYAN}üöÄ QUICK COMMANDS (From Root Directory)${NC}"
echo ""
echo -e "${GREEN}First Time Setup:${NC}"
echo -e "  ${YELLOW}./docker-setup${NC}"
echo -e "  ‚Ü≥ Complete environment setup with fresh database"
echo ""
echo -e "${GREEN}Build Docker Image:${NC}"
echo -e "  ${YELLOW}./docker-build${NC}                    # Build latest"
echo -e "  ${YELLOW}./docker-build v1.0.0${NC}             # Build with tag"
echo -e "  ${YELLOW}./docker-build latest builder${NC}     # Build development image"
echo ""
echo -e "${GREEN}Run Container:${NC}"
echo -e "  ${YELLOW}./docker-run${NC}                      # Simple run"
echo -e "  ${YELLOW}PORT=8080 ./docker-run${NC}            # Custom port"
echo ""

echo -e "${CYAN}üîß DETAILED COMMANDS (From Package Directory)${NC}"
echo ""
echo -e "${GREEN}Database Setup Commands:${NC}"
echo -e "  ${YELLOW}./package/docker-reset-and-run.sh${NC} # Full reset (recommended for first run)"
echo -e "  ${YELLOW}./package/docker-run-with-db.sh${NC}   # Run with existing database"
echo ""
echo -e "${GREEN}Build Commands:${NC}"
echo -e "  ${YELLOW}./package/docker-build.sh${NC}         # Production build"
echo -e "  ${YELLOW}./package/docker-build.sh dev builder${NC} # Development build"
echo ""
echo -e "${GREEN}Docker Compose Commands:${NC}"
echo -e "  ${YELLOW}docker-compose up -d postgres${NC}                    # Database only"
echo -e "  ${YELLOW}docker-compose -f package/docker-compose.full.yml up -d${NC} # Full stack"
echo ""

echo -e "${CYAN}üê≥ MANUAL DOCKER COMMANDS${NC}"
echo ""
echo -e "${GREEN}Build:${NC}"
echo -e "  ${YELLOW}docker build -f package/Dockerfile -t scavenger-hunt-server .${NC}"
echo ""
echo -e "${GREEN}Run:${NC}"
echo -e "  ${YELLOW}docker run -d --name scavenger-hunt-app \\"
echo -e "    -p 3000:3000 --env-file .env \\"
echo -e "    scavenger-hunt-server${NC}"
echo ""
echo -e "${GREEN}Development Run:${NC}"
echo -e "  ${YELLOW}docker run -d --name scavenger-hunt-app \\"
echo -e "    -p 3000:3000 --env-file .env \\"
echo -e "    -v \$(pwd)/drizzle:/app/drizzle:ro \\"
echo -e "    --add-host=host.docker.internal:host-gateway \\"
echo -e "    scavenger-hunt-server${NC}"
echo ""

echo -e "${CYAN}üîç MONITORING & DEBUGGING${NC}"
echo ""
echo -e "${GREEN}Container Status:${NC}"
echo -e "  ${YELLOW}docker ps${NC}                         # Running containers"
echo -e "  ${YELLOW}docker ps -a${NC}                      # All containers"
echo ""
echo -e "${GREEN}Logs:${NC}"
echo -e "  ${YELLOW}docker logs -f scavenger-hunt-app${NC} # Follow app logs"
echo -e "  ${YELLOW}docker-compose logs -f${NC}            # Follow all service logs"
echo ""
echo -e "${GREEN}Health Checks:${NC}"
echo -e "  ${YELLOW}curl http://localhost:3000/health${NC} # Application health"
echo -e "  ${YELLOW}docker inspect --format='{{.State.Health.Status}}' scavenger-hunt-app${NC} # Container health"
echo ""
echo -e "${GREEN}Shell Access:${NC}"
echo -e "  ${YELLOW}docker exec -it scavenger-hunt-app sh${NC}           # App container shell"
echo -e "  ${YELLOW}docker exec -it scavenger-hunt-postgres psql -U scavenger_hunt${NC} # Database shell"
echo ""

echo -e "${CYAN}üßπ CLEANUP COMMANDS${NC}"
echo ""
echo -e "${GREEN}Stop & Remove:${NC}"
echo -e "  ${YELLOW}docker stop scavenger-hunt-app && docker rm scavenger-hunt-app${NC}"
echo -e "  ${YELLOW}docker-compose down${NC}                # Stop all services"
echo -e "  ${YELLOW}docker-compose down -v${NC}             # Stop and remove volumes"
echo ""
echo -e "${GREEN}Image Cleanup:${NC}"
echo -e "  ${YELLOW}docker rmi scavenger-hunt-server${NC}   # Remove app image"
echo -e "  ${YELLOW}docker system prune -a${NC}             # Remove all unused images/containers"
echo ""

echo -e "${CYAN}üìä DEFAULT SETUP${NC}"
echo ""
echo -e "${GREEN}After Setup:${NC}"
echo -e "  Application:  ${YELLOW}http://localhost:3000${NC}"
echo -e "  Health Check: ${YELLOW}http://localhost:3000/health${NC}"
echo -e "  Admin User:   ${YELLOW}admin@local.domain${NC} / ${YELLOW}admin123${NC}"
echo -e "  Database:     ${YELLOW}postgresql://scavenger_hunt:scavenger_hunt@localhost:5432/scavenger_hunt${NC}"
echo ""

echo -e "${CYAN}üîê ENVIRONMENT VARIABLES${NC}"
echo ""
echo -e "${GREEN}Key Variables (.env file):${NC}"
echo -e "  ${BLUE}NODE_ENV${NC}=production"
echo -e "  ${BLUE}PORT${NC}=3000"
echo -e "  ${BLUE}DB_HOST${NC}=localhost"
echo -e "  ${BLUE}DB_PORT${NC}=5432"
echo -e "  ${BLUE}DB_NAME${NC}=scavenger_hunt"
echo -e "  ${BLUE}DB_USER${NC}=scavenger_hunt"
echo -e "  ${BLUE}DB_PASSWORD${NC}=scavenger_hunt"
echo -e "  ${BLUE}JWT_SECRET${NC}=change-me-in-production"
echo ""

echo -e "${CYAN}üìö DOCUMENTATION${NC}"
echo ""
echo -e "  ${YELLOW}README.md${NC}           - Main project documentation"
echo -e "  ${YELLOW}DOCKER.md${NC}           - Comprehensive Docker guide"
echo -e "  ${YELLOW}package/README.md${NC}   - Package directory documentation"
echo -e "  ${YELLOW}operational-guide.md${NC} - Development and deployment guide"
echo ""

echo -e "${GREEN}=========================================================${NC}"
echo -e "${GREEN}    üéØ Quick Start: ./docker-setup                     ${NC}"
echo -e "${GREEN}=========================================================${NC}"
